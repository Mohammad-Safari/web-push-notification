## tomcat
server:
  http2:
    enabled: true
  port: 8443
  # servlet:
  #   context-path: /angular-app
  ssl:
    enabled: true
    key-store: classpath:keystore/spring-mvc.p12
    key-store-password: spring-mvc
    key-store-type: PKCS12
    key-alias: spring-mvc
### cache
spring:
  redis:
    host: 192.168.7.217
    ## Port of redis server.
    port: 30353
    ## Redis username
    username: admin
    ## Redis password
    password: admin
    ## Redis data base id of project and defined redis user
    database: 12

  ### database
  ## h2
  datasource:
    # initialization-mode: always
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: true
    # hibernate:
    ## Initialize data using JPA and Hibernate
    # ddl-auto: create
    ## Initialize using schema.sql and data.sql for non embedded relational db
    # ddl-auto: none
    ## If we still want to have both Hibernate automatic schema generation in conjugation with script-based schema creation and data population, we'll have to use:
  h2:
    console:
      enabled: true

  thymeleaf:
    cache: false

thirdparty:
  push-server:
    url: https://192.168.74.95:8443/sse/notification/
